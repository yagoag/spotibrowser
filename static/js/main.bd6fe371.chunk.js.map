{"version":3,"sources":["store/actions.js","components/Playlist/index.js","components/Pagination/index.js","pages/Playlists/index.js","components/SelectFilter/index.js","components/InputFilter/index.js","components/FilterElement/index.js","pages/FilterPanel/index.js","components/ArtistTooltip/index.js","components/Track/index.js","pages/Tracks/index.js","store/index.js","pages/App/index.js","index.js"],"names":["setActivePlaylist","playlist","type","SET_ACTIVE_PLAYLIST","setAutoRefresh","value","SET_AUTO_REFRESH","SET_FILTERS","Playlist","dispatch","useDispatch","activePlaylist","useSelector","state","className","id","onClick","src","images","url","width","height","alt","name","Math","floor","random","owner","display_name","tracks","total","Pagination","offset","limit","setOffset","setLimit","small","useState","pageVal","setPageVal","ceil","onChange","e","isNaN","parseInt","target","Playlists","setUnauthorized","accessToken","playlistMessage","setPlaylistMessage","playlists","setPlaylists","isLoading","setIsLoading","totalPlaylists","setTotalPlaylists","filters","autoRefresh","useEffect","fetchPlaylistData","a","async","axios","get","process","params","headers","Authorization","then","res","data","message","items","catch","finally","interval","setInterval","clearInterval","mockPlaylists","i","push","map","n","key","active","styles","menu","provided","color","control","border","boxShadow","minHeight","indicatorsContainer","margin","padding","paddingLeft","indicatorSeparator","input","dropdownIndicator","option","backgroundColor","isSelected","isFocused","cursor","SelectFilter","values","defaultValue","options","isSearchable","item","validateInput","validation","primitiveType","parsedVal","test","Error","min","max","InputFilter","setError","entityType","dateTime","event","error","replace","FilterElement","definition","props","default","FilterPanel","visible","changeSingleFilter","newState","setFilters","filterDefs","def","checked","calculateFollowers","number","round","ArtistTooltip","artist","setArtist","response","status","followers","href","external_urls","spotify","rel","Track","track","title","substring","length","artists","index","placement","trigger","overlay","Tracks","setTracks","totalTracks","setTotalTracks","mockTracks","filter","t","INITIAL_STATE","store","createStore","action","App","REACT_APP_AUTH_API_URL","REACT_APP_CLIENT_ID","REACT_APP_URL","showFilters","setShowFilters","unauthorized","setAccessToken","localStorage","getItem","hashParams","window","location","hash","substr","split","reduce","result","parts","access_token","setItem","removeItem","highlightColor","ReactDOM","render","document","getElementById"],"mappings":"44GAAA,SAASA,EAAkBC,GACzB,MAAO,CACLC,KAAMC,EACNF,YAWJ,SAASG,EAAeC,GACtB,MAAO,CACLH,KAAMI,EACND,SAIJ,IAAMF,EAAsB,sBACtBI,EAAc,cACdD,EAAmB,mBCmCVE,G,OApDE,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SACZQ,EAAWC,cACXC,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,kBAElD,OACE,yBACEG,UAAS,kBAAaH,EAAiB,kBAAoB,IAAlD,OACPA,GAAkBV,GAAYA,EAASc,KAAOJ,EAAeI,GACzD,UACA,IAENC,QAAS,kBAAMP,EAAST,EAAkBC,MAEzCA,EACC,yBACEgB,IAAKhB,EAASiB,OAAO,GAAGC,IACxBC,MAAM,OACNC,OAAO,OACPC,IAAKrB,EAASsB,OAGhB,kBAAC,IAAD,CAAUH,MAAM,OAAOC,OAAO,SAEhC,yBAAKP,UAAU,QACb,yBAAKA,UAAU,QACZb,EACCA,EAASsB,KAET,kBAAC,IAAD,CAAUH,MAAOI,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,IAAM,QAG1DzB,EACC,mCACK,0BAAMa,UAAU,SAASb,EAAS0B,MAAMC,eAG7C,kBAAC,IAAD,CAAUR,MAAM,SAElB,6BACGnB,EAAQ,UACJA,EAAS4B,OAAOC,MADZ,gBAEL7B,EAAS4B,OAAOC,MAAQ,EAAI,IAAM,IAGpC,kBAAC,IAAD,CAAUV,MAAM,c,QCUbW,G,OAxDI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,MAAOH,EAAwC,EAAxCA,MAAOI,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EAC7CC,mBAAS,MADoC,mBACpEC,EADoE,KAC3DC,EAD2D,KAY3E,OACE,yBAAKzB,UAAS,oBAAesB,EAAQ,SAAW,KAC9C,kBAAC,IAAD,CACEpB,QAAS,kBAAMgB,GAAUC,EAAQ,GAAKC,EAAUF,EAASC,IACzDnB,UAAW,SAAWkB,EAASC,EAAQ,EAAI,YAAc,MAE3D,0BAAMnB,UAAU,aAAhB,OAEE,yBAAKA,UAAU,SACb,2BACEZ,KAAK,OACLY,UAAU,cACVT,MAAOiC,GAAWd,KAAKgB,KAAKR,EAASC,GAAS,EAC9CQ,SAtBY,SAAAC,GACfC,MAAMC,SAASF,EAAEG,OAAOxC,QAI3BkC,EAAWG,EAAEG,OAAOxC,QAHpB6B,GAAWQ,EAAEG,OAAOxC,MAAQ,GAAK4B,GACjCM,EAAW,WAYX,cAUUf,KAAKgB,KAAKV,EAAQG,KAE5B,kBAAC,IAAD,CACEjB,QAAS,kBAAMgB,EAASF,EAAQG,GAASC,EAAUF,EAASC,IAC5DnB,UAAS,gBAAWkB,GAAUF,EAAQG,EAAQ,YAAc,MAE9D,0BAAMnB,UAAU,cACb,MACD,yBAAKA,UAAU,SACb,4BACEA,UAAU,iBACVT,MAAO4B,EACPQ,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEG,OAAOxC,SAEjC,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAEG,IAfT,qBCkESyC,G,OA/FG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAAkB,EACRX,mBAAS,IADD,mBAC/CY,EAD+C,KAC9BC,EAD8B,OAEpBb,mBAAS,IAFW,mBAE/Cc,EAF+C,KAEpCC,EAFoC,OAGpBf,oBAAS,GAHW,mBAG/CgB,EAH+C,KAGpCC,EAHoC,OAI5BjB,mBAAS,GAJmB,mBAI/CJ,EAJ+C,KAIxCE,EAJwC,OAK1BE,mBAAS,GALiB,mBAK/CL,EAL+C,KAKvCE,EALuC,OAMVG,mBAAS,GANC,mBAM/CkB,EAN+C,KAM/BC,EAN+B,KAOhD7C,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,kBAC5C8C,EAAU7C,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,WACrCC,EAAc9C,aAAY,SAAAC,GAAK,OAAIA,EAAM6C,eAE/CC,qBAAU,WACR,IAAMC,EAAoB,oBAAAC,EAAAC,OAAA,gDACxBR,GAAa,GAETN,GACFe,IACGC,IAnB2BC,uDAmBI,CAC9BC,OAAO,eAAMT,EAAP,CAAgBzB,SAAQC,UAC9BkC,QAAS,CACPC,cAAc,UAAD,OAAYpB,MAG5BqB,MAAK,SAAAC,GACJpB,EAAmBoB,EAAIC,KAAKC,SAC5BpB,EAAakB,EAAIC,KAAKpB,UAAUsB,OAChCjB,EAAkBc,EAAIC,KAAKpB,UAAUrB,UAEtC4C,OAAM,SAAAhC,GACLK,GAAgB,MAEjB4B,SAAQ,WACPrB,GAAa,MApBK,sCA2B1B,GAFAM,IAEIF,EAAa,CACf,IAAMkB,EAAWC,aAAY,WAC3BjB,MACC,KAEH,OAAO,kBAAMkB,cAAcF,OAE5B,CAACnB,EAASxB,EAAOD,EAAQe,EAAiBC,EAAaU,IAE1DC,qBAAU,WACRzB,EAAU,KACT,CAACuB,IAEJ,IAAMsB,EAAgB,GACtB,GAAI1B,EACF,IAAK,IAAI2B,EAAI,EAAGA,EAAI/C,EAAO+C,IACzBD,EAAcE,KAAKD,GAIvB,OACE,yBACElE,UAAS,4BACPH,EAAiB,mBAAqB,KAGxC,yBAAKG,UAAU,SAASmC,GACxB,kBAAC,EAAD,CACEjB,OAAQA,EACRC,MAAOA,EACPH,MAAOyB,EACPrB,UAAWA,EACXC,SAAUA,EACVC,QAASzB,IAET0C,EAQE0B,EAAcG,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAUC,IAAKD,OAPtChC,EAAU+B,KAAI,SAAAjF,GAAQ,OACpB,kBAAC,EAAD,CACEmF,IAAKnF,EAASc,GACdd,SAAUA,EACVoF,OAAQ1E,OAIhB,kBAAC,EAAD,CACEqB,OAAQA,EACRC,MAAOA,EACPH,MAAOyB,EACPrB,UAAWA,EACXC,SAAUA,EACVC,QAASzB,O,SClFX2E,EAAS,CACbC,KAAM,SAAAC,GAAQ,sBACTA,EADS,CAEZC,MAAO,aAETC,QAAS,SAAAF,GAAQ,sBACZA,EADY,CAEfG,OAAQ,OACRC,UAAW,OACXC,UAAW,WAEbC,oBAAqB,SAAAN,GAAQ,sBACxBA,EADwB,CAE3BO,OAAQ,EACRC,QAAS,EACTC,YAAa,SAEfC,mBAAoB,SAAAV,GAAQ,sBACvBA,EADuB,CAE1BO,OAAQ,WAEVI,MAAO,SAAAX,GAAQ,sBACVA,EADU,CAEbO,OAAQ,EACRC,QAAS,KAEXI,kBAAmB,SAAAZ,GAAQ,sBACtBA,EADsB,CAEzBQ,QAAS,EACTC,YAAa,SAEfI,OAAQ,SAACb,EAAU3E,GAAX,sBACH2E,EADG,CAENc,gBACGzF,EAAM0F,WAAc,UAAe1F,EAAM2F,WAAa,YACzDC,OAAQ,cAIGC,EApDM,SAAC,GAA4C,IAA1C3F,EAAyC,EAAzCA,GAAI4F,EAAqC,EAArCA,OAAQlE,EAA6B,EAA7BA,SAAUmE,EAAmB,EAAnBA,aAC5C,OACE,kBAAC,IAAD,CACErF,KAAMR,EACN8F,QAASF,EACTC,aAAcA,EACdE,cAAc,EACdrE,SAAU,SAAAsE,GAAI,OAAItE,EAAS,CAAEI,OAAQ,CAAE9B,GAAIA,EAAIV,MAAO0G,EAAK1G,UAC3DiF,OAAQA,K,kBC4BR0B,G,OAAgB,SAAC3G,EAAO4G,GAC5B,GAAiC,YAA7BA,EAAWC,cAA6B,CAC1C,IAAMC,EAAYvE,SAASvC,GAC3B,IAAK,QAAQ+G,KAAK/G,GAChB,MAAM,IAAIgH,MAAM,sBAElB,GAAIJ,EAAWK,KACTH,EAAYF,EAAWK,IACzB,MAAM,IAAID,MAAM,oBAAsBJ,EAAWK,KAGrD,GAAIL,EAAWM,KACTJ,EAAYF,EAAWM,IACzB,MAAM,IAAIF,MAAM,mBAAqBJ,EAAWM,QAMzCC,EApDK,SAAC,GAAyD,IAAvDzG,EAAsD,EAAtDA,GAAIQ,EAAkD,EAAlDA,KAAM0F,EAA4C,EAA5CA,WAAY5G,EAAgC,EAAhCA,MAAOoC,EAAyB,EAAzBA,SAAUgF,EAAe,EAAfA,SACtDhH,EAAWC,cAkBjB,MAAI,eAAgBuG,GAAwC,cAA1BA,EAAWS,WACpC,kBAAC,IAAD,CAAgBrH,MAAOA,EAAOoC,SANV,SAAAkF,GAC3BlH,EAASL,GAAgBuH,IACzBlF,EAAS,CAAEI,OAAQ,CAAE9B,GAAIA,EAAIV,MAAOsH,QAOlC,2BACEzH,KAAmC,YAA7B+G,EAAWC,cAA8B,SAAW,OAC1DnG,GAAIA,EACJV,MAAOA,GAAS,GAChBoC,SAxBe,SAAAmF,GACnB,IACEZ,EAAcY,EAAM/E,OAAOxC,MAAO4G,GAClCQ,EAAS,MACT,MAAOI,GACPJ,EAASI,EAAMrD,QAAQsD,QAAQ,SAAUvG,IAJ3C,QAMEkB,EAASmF,QCwBAG,G,OAnCO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAY3H,EAAsB,EAAtBA,MAAOoC,EAAe,EAAfA,SAAe,EAC/BJ,mBAAS,MADsB,mBAClDwF,EADkD,KAC3CJ,EAD2C,KAGnDQ,EAAQ,CACZlH,GAAIiH,EAAWjH,GACfQ,KAAMyG,EAAWzG,KACjBlB,MAAOA,EACPoC,SAAUA,GAGZ,OACE,yBAAK2C,IAAK4C,EAAWjH,GAAID,UAAU,UACjC,yBAAKA,UAAU,eACZkH,EAAWzG,KACZ,0BAAMT,UAAU,iBAAhB,IAAkC+G,IAEpC,yBAAK/G,UAAS,sBAAiB+G,EAAQ,SAAW,KAC/C,WAAYG,EACX,kBAAC,EAAD,eACErB,OAAQqB,EAAWrB,OACnBC,aAAcoB,EAAWE,SACrBD,IAGN,kBAAC,EAAD,eACEhB,WAAYe,EAAWf,WACvBQ,SAAUA,GACNQ,Q,SCYDE,G,OArCK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf3E,EAAU7C,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,WACrCC,EAAc9C,aAAY,SAAAC,GAAK,OAAIA,EAAM6C,eACzCjD,EAAWC,cAEX2H,EAAqB,SAAAT,GACzB,IAAMU,EAAQ,eAAQ7E,GACtB6E,EAASV,EAAM/E,OAAO9B,IAAM6G,EAAM/E,OAAOxC,MACzCI,EPRJ,SAAoBgD,GAClB,MAAO,CACLvD,KAAMK,EACNkD,WOKS8E,CAAWD,KAOtB,OACE,yBAAKxH,UAAW,gBAAkBsH,EAAU,WAAa,KACtDI,EAAWtD,KAAI,SAAAuD,GAAG,OACjB,kBAAC,EAAD,CACErD,IAAKqD,EAAI1H,GACTiH,WAAYS,EACZpI,MAAOoD,EAAQgF,EAAI1H,IACnB0B,SAAU4F,OAGd,yBAAKvH,UAAU,gBACb,2BACEZ,KAAK,WACLwI,QAAShF,EACTjB,SAlBkB,SAAAmF,GACxBnH,EAASL,EAAewH,EAAM/E,OAAO6F,aAkB9B,IALL,0B,kBCsCAC,G,OAAqB,SAAAC,GACzB,OAAOA,EAAS,IACZA,EACAA,EAAS,IACTpH,KAAKqH,MAAMD,EAAS,KAAQ,IAC5BpH,KAAKqH,MAAMD,EAAS,KAAW,MAGtBE,EAzEO,SAAC,GAAiD,IAA/CvH,EAA8C,EAA9CA,KAAMJ,EAAwC,EAAxCA,IAAK6B,EAAmC,EAAnCA,YAAaD,EAAsB,EAAtBA,gBAAsB,EACzCV,mBAAS,MADgC,mBAC9D0G,EAD8D,KACtDC,EADsD,KA0BrE,OAvBArF,qBAAU,WACgB,EAAAE,EAAAC,OAAA,gDAClB3C,GACF4C,IACGC,IAAI7C,EAAK,CACRgD,QAAS,CACPC,cAAc,UAAD,OAAYpB,MAG5BqB,MAAK,SAAAC,GACJ0E,EAAU1E,EAAIC,SAEfG,OAAM,SAAAhC,GACqB,MAAtBA,EAAEuG,SAASC,QACbnG,GAAgB,MAbF,uCAoBvB,CAAC5B,EAAK6B,EAAaD,IAGpB,yBAAKjC,UAAU,oBACZiI,EACC,yBACEjI,UAAU,iBACVG,IAAK8H,EAAO7H,OAAO,GAAGC,IACtBG,IAAKyH,EAAOxH,OAGd,yBAAKT,UAAU,kBACb,kBAAC,IAAD,CAAUM,MAAM,OAAOC,OAAO,UAGlC,yBAAKP,UAAU,kBACb,yBAAKA,UAAU,eAAeS,GAAQwH,EAAOxH,MAC7C,yBAAKT,UAAU,oBACZiI,EAAM,UACFJ,EAAmBI,EAAOI,UAAUrH,OADlC,cAGL,kBAAC,IAAD,CAAUV,MAAM,UAGnB2H,EACC,uBACEjI,UAAU,2BACVsI,KAAML,EAAOM,cAAcC,QAC3BzG,OAAO,SACP0G,IAAI,uBAJN,mBASA,kBAAC,IAAD,CAAUnI,MAAM,aCPXoI,G,OAhDD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOzG,EAAmC,EAAnCA,YAAaD,EAAsB,EAAtBA,gBACnC,OAAK0G,EASH,yBAAK3I,UAAU,SACb,uBACEA,UAAU,iCACV4I,MAAOD,EAAMlI,KACb6H,KAAMK,EAAMJ,cAAcC,QAC1BzG,OAAO,SACP0G,IAAI,uBALN,UAOME,EAAMlI,KAAKoI,UAAU,EApBR,KAanB,OAQIF,EAAMlI,KAAKqI,OArBI,GAqBwB,MAAQ,KATrD,SAaE,0BAAM9I,UAAU,eACb2I,EAAMI,QAAQ3E,KAAI,SAAC6D,EAAQe,GAAT,OACjB,0BAAM1E,IAAK2D,EAAOhI,IAChB,kBAAC,IAAD,CACEgJ,UAAU,MACVC,QAAS,CAAC,SACVC,QACE,kBAAC,EAAD,CACE1I,KAAMwH,EAAOxH,KACbJ,IAAK4H,EAAOK,KACZpG,YAAaA,EACbD,gBAAiBA,KAIrB,0BAAMjC,UAAU,UAAUiI,EAAOxH,OAElCuI,EAAQL,EAAMI,QAAQD,OAAS,EAAI,KAAO,SArCjD,yBAAK9I,UAAU,SACb,kBAAC,IAAD,CAAUM,MAAOI,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,IAAM,SC2HhDwI,G,OA9HA,SAAC,GAAsC,IAApCnH,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAAkB,EACvBX,mBAAS,IADc,mBAC5CR,EAD4C,KACpCsI,EADoC,OAEb9H,mBAAS,GAFI,mBAE5C+H,EAF4C,KAE/BC,EAF+B,OAGjBhI,oBAAS,GAHQ,mBAG5CgB,EAH4C,KAGjCC,EAHiC,OAIzBjB,mBAAS,IAJgB,mBAI5CJ,EAJ4C,KAIrCE,EAJqC,OAKvBE,mBAAS,GALc,mBAK5CL,EAL4C,KAKpCE,EALoC,KAM7CjC,EAAWW,aAAY,SAAAC,GAAK,OAAIA,EAAMF,kBACtC+C,EAAc9C,aAAY,SAAAC,GAAK,OAAIA,EAAM6C,eACzCjD,EAAWC,cAEjBiD,qBAAU,WACR,IAAMC,EAAoB,oBAAAC,EAAAC,OAAA,gDACxBR,GAAa,GAETrD,GAAY+C,GACde,IACGC,IAAI/D,EAAS4B,OAAOuH,KAAM,CACzBlF,OAAQ,CAAElC,SAAQC,SAClBkC,QAAS,CACPC,cAAc,UAAD,OAAYpB,MAG5BqB,MAAK,SAAAC,GACJ6F,EAAU7F,EAAIC,KAAKE,OACnB4F,EAAe/F,EAAIC,KAAKzC,UAEzB4C,OAAM,SAAAhC,GACqB,MAAtBA,EAAEuG,SAASC,QACbnG,GAAgB,MAGnB4B,SAAQ,WACPrB,GAAa,MArBK,sCA4B1B,GAFAM,IAEIF,EAAa,CACf,IAAMkB,EAAWC,aAAY,WAC3BjB,MACC,KAEH,OAAO,kBAAMkB,cAAcF,OAE5B,CAAC3E,EAAU8C,EAAiBC,EAAaf,EAAOD,EAAQ0B,IAE3DC,qBAAU,WACRzB,EAAU,KACT,CAACjC,IAEJ,IAAMqK,EAAa,GACnB,GAAIjH,EACF,IAAK,IAAI2B,EAAI,EAAGA,EAAI/C,EAAO+C,IACzBsF,EAAWrF,KAAKD,GAIpB,OAAK/E,EAKH,yBAAKa,UAAS,mBACZ,yBAAKA,UAAU,iBACb,yBACEA,UAAU,iBACVG,IAAKhB,EAASiB,OAAO,GAAGC,IACxBG,IAAKrB,EAASsB,OAEhB,yBAAKT,UAAU,oBACb,yBAAKA,UAAU,aACb,uBACEA,UAAU,eACVsI,KAAMnJ,EAASoJ,cAAcC,QAC7BzG,OAAO,SACP0G,IAAI,uBAJN,oBASF,yBAAKzI,UAAU,iBAAiBb,EAASsB,MACzC,yBAAKT,UAAU,eAAf,aACa,IACX,uBACEA,UAAU,oCACVsI,KAAMnJ,EAAS0B,MAAM0H,cAAcC,QACnCzG,OAAO,SACP0G,IAAI,uBAEHtJ,EAAS0B,MAAMC,cACb,IATP,QAUK3B,EAAS4B,OAAOC,MAVrB,WAaF,kBAAC,IAAD,CACEhB,UAAU,eACVE,QAAS,kBAAMP,EAAST,EAAkB,WAG9C,yBAAKc,UAAU,cACXuC,EAWEiH,EAAWpF,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAOC,IAAKD,OAVhCtD,EACG0I,QAAO,SAAAC,GAAC,OAAIA,EAAEf,OAASe,EAAEf,MAAM1I,MAC/BmE,KAAI,SAAAsF,GAAC,OACJ,kBAAC,EAAD,CACEpF,IAAKoF,EAAEf,MAAM1I,GACb0I,MAAOe,EAAEf,MACTzG,YAAaA,EACbD,gBAAiBA,QAK7B,kBAAC,EAAD,CACEf,OAAQA,EACRC,MAAOA,EACPH,MAAOsI,EACPlI,UAAWA,EACXC,SAAUA,KA5DP,uC,QClELsI,EAAgB,CACpB9J,eAAgB,KAChB8C,QAAS,GACTC,aAAa,GAgBf,IAEegH,EAFDC,aAbd,WAAiD,IAAhC9J,EAA+B,uDAAvB4J,EAAeG,EAAQ,uCAC9C,OAAQA,EAAO1K,MACb,KAAKC,EACH,OAAO,eAAKU,EAAZ,CAAmBF,eAAgBiK,EAAO3K,WAC5C,KAAKM,EACH,OAAO,eAAKM,EAAZ,CAAmB4C,QAASmH,EAAOnH,UACrC,KAAKnD,EACH,OAAO,eAAKO,EAAZ,CAAmB6C,YAAakH,EAAOvK,QACzC,QACE,OAAOQ,M,ECJToD,yTAuEW4G,G,EA1EbC,uB,EACAC,oB,EACAC,cAOU,WAAO,IAAD,EACsB3I,oBAAS,GAD/B,mBACT4I,EADS,KACIC,EADJ,OAEwB7I,oBAAS,GAFjC,mBAET8I,EAFS,KAEKpI,EAFL,OAGsBV,mBAAS,MAH/B,mBAGTW,EAHS,KAGIoI,EAHJ,KAgChB,OA3BAzH,qBAAU,WACR,GAAK0H,aAAaC,QAAQ,gBAexBF,EAAeC,aAAaC,QAAQ,qBAfK,CACzC,IACMC,EADOC,OAAOC,SAASC,KAAKC,OAAO,GACjBC,MAAM,KAAKC,QAAO,SAACC,EAAQ/E,GACjD,IAAIgF,EAAQhF,EAAK6E,MAAM,KAEvB,OADAE,EAAOC,EAAM,IAAMA,EAAM,GAClBD,IACN,IAECP,EAAWS,eACbX,aAAaY,QAAQ,eAAgBV,EAAWS,cAChDZ,EAAeG,EAAWS,kBAO7B,IAEHrI,qBAAU,WACJwH,GACFE,aAAaa,WAAW,kBAGzB,CAACf,IAGF,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,gBAAD,CAAejF,MAAM,UAAU0G,eAAe,QAC5C,yBAAKrL,UAAU,OACb,yBAAKC,GAAG,UACN,yBAAKD,UAAU,aAAf,gBACA,4BACEA,UAAU,eACVE,QAAS,kBAAMkK,GAAgBD,KAFjC,UAKE,0BAAMnK,UAAU,SACbmK,EAAc,kBAAC,IAAD,MAAsB,kBAAC,IAAD,SAI3C,kBAAC,EAAD,CAAa7C,QAAS6C,IACtB,yBAAKlK,GAAG,YACN,kBAAC,EAAD,CACEgC,gBAAiBA,EACjBC,YAAaA,IAEf,kBAAC,EAAD,CACED,gBAAiBA,EACjBC,YAAaA,UCxE3BoJ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bd6fe371.chunk.js","sourcesContent":["function setActivePlaylist(playlist) {\n  return {\n    type: SET_ACTIVE_PLAYLIST,\n    playlist,\n  };\n}\n\nfunction setFilters(filters) {\n  return {\n    type: SET_FILTERS,\n    filters,\n  };\n}\n\nfunction setAutoRefresh(value) {\n  return {\n    type: SET_AUTO_REFRESH,\n    value,\n  };\n}\n\nconst SET_ACTIVE_PLAYLIST = 'SET_ACTIVE_PLAYLIST';\nconst SET_FILTERS = 'SET_FILTERS';\nconst SET_AUTO_REFRESH = 'SET_AUTO_REFRESH';\n\nexport {\n  SET_ACTIVE_PLAYLIST,\n  SET_FILTERS,\n  SET_AUTO_REFRESH,\n  setActivePlaylist,\n  setFilters,\n  setAutoRefresh,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Skeleton from 'react-loading-skeleton';\nimport { setActivePlaylist } from '../../store/actions';\nimport './style.css';\n\nconst Playlist = ({ playlist }) => {\n  const dispatch = useDispatch();\n  const activePlaylist = useSelector(state => state.activePlaylist);\n\n  return (\n    <div\n      className={`playlist${activePlaylist ? ' playlist-small' : ''}${\n        activePlaylist && playlist && playlist.id === activePlaylist.id\n          ? ' active'\n          : ''\n      }`}\n      onClick={() => dispatch(setActivePlaylist(playlist))}\n    >\n      {playlist ? (\n        <img\n          src={playlist.images[0].url}\n          width=\"64px\"\n          height=\"64px\"\n          alt={playlist.name}\n        />\n      ) : (\n        <Skeleton width=\"64px\" height=\"64px\" />\n      )}\n      <div className=\"info\">\n        <div className=\"name\">\n          {playlist ? (\n            playlist.name\n          ) : (\n            <Skeleton width={Math.floor(Math.random() * 60 + 61) + 'px'} />\n          )}\n        </div>\n        {playlist ? (\n          <div>\n            By <span className=\"owner\">{playlist.owner.display_name}</span>\n          </div>\n        ) : (\n          <Skeleton width=\"60px\" />\n        )}\n        <div>\n          {playlist ? (\n            `${playlist.tracks.total} song${\n              playlist.tracks.total > 1 ? 's' : ''\n            }`\n          ) : (\n            <Skeleton width=\"55px\" />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Playlist;\n","import React, { useState } from 'react';\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa';\nimport './style.css';\n\nconst Pagination = ({ offset, limit, total, setOffset, setLimit, small }) => {\n  const [pageVal, setPageVal] = useState(null);\n\n  const handlePageVal = e => {\n    if (!isNaN(parseInt(e.target.value))) {\n      setOffset((e.target.value - 1) * limit);\n      setPageVal(null);\n    } else {\n      setPageVal(e.target.value);\n    }\n  };\n\n  return (\n    <div className={`pagination${small ? ' small' : ''}`}>\n      <FaAngleLeft\n        onClick={() => offset >= limit - 1 && setOffset(offset - limit)}\n        className={'arrow' + (offset < limit - 1 ? ' disabled' : '')}\n      />\n      <span className=\"page-info\">\n        Page\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            className=\"page-number\"\n            value={pageVal || Math.ceil(offset / limit) + 1}\n            onChange={handlePageVal}\n          />\n        </div>\n        {` of ${Math.ceil(total / limit)}`}\n      </span>\n      <FaAngleRight\n        onClick={() => offset < total - limit && setOffset(offset + limit)}\n        className={`arrow ${offset >= total - limit ? ' disabled' : ''}`}\n      />\n      <span className=\"page-limit\">\n        {' | '}\n        <div className=\"input\">\n          <select\n            className=\"items-per-page\"\n            value={limit}\n            onChange={e => setLimit(e.target.value)}\n          >\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"30\">30</option>\n            <option value=\"40\">40</option>\n            <option value=\"50\">50</option>\n          </select>\n        </div>{' '}\n        items per page\n      </span>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport Playlist from '../../components/Playlist';\nimport Pagination from '../../components/Pagination';\nimport './style.css';\n\nconst { REACT_APP_SPOTIFY_API_URL } = process.env;\n\nconst Playlists = ({ setUnauthorized, accessToken }) => {\n  const [playlistMessage, setPlaylistMessage] = useState('');\n  const [playlists, setPlaylists] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [limit, setLimit] = useState(5);\n  const [offset, setOffset] = useState(0);\n  const [totalPlaylists, setTotalPlaylists] = useState(0);\n  const activePlaylist = useSelector(state => state.activePlaylist);\n  const filters = useSelector(state => state.filters);\n  const autoRefresh = useSelector(state => state.autoRefresh);\n\n  useEffect(() => {\n    const fetchPlaylistData = async () => {\n      setIsLoading(true);\n\n      if (accessToken) {\n        axios\n          .get(REACT_APP_SPOTIFY_API_URL, {\n            params: { ...filters, offset, limit },\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          })\n          .then(res => {\n            setPlaylistMessage(res.data.message);\n            setPlaylists(res.data.playlists.items);\n            setTotalPlaylists(res.data.playlists.total);\n          })\n          .catch(e => {\n            setUnauthorized(true);\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      }\n    };\n\n    fetchPlaylistData();\n\n    if (autoRefresh) {\n      const interval = setInterval(() => {\n        fetchPlaylistData();\n      }, 30000);\n\n      return () => clearInterval(interval);\n    }\n  }, [filters, limit, offset, setUnauthorized, accessToken, autoRefresh]);\n\n  useEffect(() => {\n    setOffset(0);\n  }, [filters]);\n\n  const mockPlaylists = [];\n  if (isLoading) {\n    for (let i = 0; i < limit; i++) {\n      mockPlaylists.push(i);\n    }\n  }\n\n  return (\n    <div\n      className={`playlist-container${\n        activePlaylist ? ' active-playlist' : ''\n      }`}\n    >\n      <div className=\"title\">{playlistMessage}</div>\n      <Pagination\n        offset={offset}\n        limit={limit}\n        total={totalPlaylists}\n        setOffset={setOffset}\n        setLimit={setLimit}\n        small={!!activePlaylist}\n      />\n      {!isLoading\n        ? playlists.map(playlist => (\n            <Playlist\n              key={playlist.id}\n              playlist={playlist}\n              active={activePlaylist}\n            />\n          ))\n        : mockPlaylists.map(n => <Playlist key={n} />)}\n      <Pagination\n        offset={offset}\n        limit={limit}\n        total={totalPlaylists}\n        setOffset={setOffset}\n        setLimit={setLimit}\n        small={!!activePlaylist}\n      />\n    </div>\n  );\n};\n\nexport default Playlists;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst SelectFilter = ({ id, values, onChange, defaultValue }) => {\n  return (\n    <Select\n      name={id}\n      options={values}\n      defaultValue={defaultValue}\n      isSearchable={true}\n      onChange={item => onChange({ target: { id: id, value: item.value } })}\n      styles={styles}\n    />\n  );\n};\n\nconst styles = {\n  menu: provided => ({\n    ...provided,\n    color: '#000000',\n  }),\n  control: provided => ({\n    ...provided,\n    border: 'none',\n    boxShadow: 'none',\n    minHeight: 'unset',\n  }),\n  indicatorsContainer: provided => ({\n    ...provided,\n    margin: 0,\n    padding: 0,\n    paddingLeft: '4px',\n  }),\n  indicatorSeparator: provided => ({\n    ...provided,\n    margin: '4px 0',\n  }),\n  input: provided => ({\n    ...provided,\n    margin: 0,\n    padding: 0,\n  }),\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: 0,\n    paddingLeft: '4px',\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor:\n      (state.isSelected && '#1db954') || (state.isFocused && '#1db95433'),\n    cursor: 'pointer',\n  }),\n};\n\nexport default SelectFilter;\n","import React from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useDispatch } from 'react-redux';\nimport { setAutoRefresh } from '../../store/actions';\nimport './style.css';\n\nconst InputFilter = ({ id, name, validation, value, onChange, setError }) => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    try {\n      validateInput(event.target.value, validation);\n      setError(null);\n    } catch (error) {\n      setError(error.message.replace('{name}', name));\n    } finally {\n      onChange(event);\n    }\n  };\n\n  const handleDateTimeChange = dateTime => {\n    dispatch(setAutoRefresh(!dateTime));\n    onChange({ target: { id: id, value: dateTime } });\n  };\n\n  if ('entityType' in validation && validation.entityType === 'DATE_TIME') {\n    return <DateTimePicker value={value} onChange={handleDateTimeChange} />;\n  } else {\n    return (\n      <input\n        type={validation.primitiveType === 'INTEGER' ? 'number' : 'text'}\n        id={id}\n        value={value || ''}\n        onChange={handleChange}\n      />\n    );\n  }\n};\n\nconst validateInput = (value, validation) => {\n  if (validation.primitiveType === 'INTEGER') {\n    const parsedVal = parseInt(value);\n    if (!/^\\d*$/.test(value)) {\n      throw new Error('must be an integer');\n    }\n    if (validation.min) {\n      if (parsedVal < validation.min) {\n        throw new Error('must be at least ' + validation.min);\n      }\n    }\n    if (validation.max) {\n      if (parsedVal > validation.max) {\n        throw new Error('must be at most ' + validation.max);\n      }\n    }\n  }\n};\n\nexport default InputFilter;\nexport { validateInput };\n","import React, { useState } from 'react';\nimport SelectFilter from '../SelectFilter';\nimport InputFilter from '../InputFilter';\nimport './style.css';\n\nconst FilterElement = ({ definition, value, onChange }) => {\n  const [error, setError] = useState(null);\n\n  const props = {\n    id: definition.id,\n    name: definition.name,\n    value: value,\n    onChange: onChange,\n  };\n\n  return (\n    <div key={definition.id} className=\"filter\">\n      <div className=\"filter-name\">\n        {definition.name}\n        <span className=\"error-message\"> {error}</span>\n      </div>\n      <div className={`filter-input${error ? ' error' : ''}`}>\n        {'values' in definition ? (\n          <SelectFilter\n            values={definition.values}\n            defaultValue={definition.default}\n            {...props}\n          />\n        ) : (\n          <InputFilter\n            validation={definition.validation}\n            setError={setError}\n            {...props}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FilterElement;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FilterElement from '../../components/FilterElement';\nimport { setFilters, setAutoRefresh } from '../../store/actions';\nimport filterDefs from './filters.json';\nimport './style.css';\n\nconst FilterPanel = ({ visible }) => {\n  const filters = useSelector(state => state.filters);\n  const autoRefresh = useSelector(state => state.autoRefresh);\n  const dispatch = useDispatch();\n\n  const changeSingleFilter = event => {\n    const newState = { ...filters };\n    newState[event.target.id] = event.target.value;\n    dispatch(setFilters(newState));\n  };\n\n  const changeAutoRefresh = event => {\n    dispatch(setAutoRefresh(event.target.checked));\n  };\n\n  return (\n    <div className={'filter-panel' + (visible ? ' visible' : '')}>\n      {filterDefs.map(def => (\n        <FilterElement\n          key={def.id}\n          definition={def}\n          value={filters[def.id]}\n          onChange={changeSingleFilter}\n        />\n      ))}\n      <div className=\"auto-refresh\">\n        <input\n          type=\"checkbox\"\n          checked={autoRefresh}\n          onChange={changeAutoRefresh}\n        />{' '}\n        Enable auto-refresh\n      </div>\n    </div>\n  );\n};\n\nexport default FilterPanel;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Skeleton from 'react-loading-skeleton';\nimport './style.css';\n\nconst ArtistTooltip = ({ name, url, accessToken, setUnauthorized }) => {\n  const [artist, setArtist] = useState(null);\n\n  useEffect(() => {\n    const fetchArtistData = async () => {\n      if (url) {\n        axios\n          .get(url, {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          })\n          .then(res => {\n            setArtist(res.data);\n          })\n          .catch(e => {\n            if (e.response.status === 401) {\n              setUnauthorized(true);\n            }\n          });\n      }\n    };\n\n    fetchArtistData();\n  }, [url, accessToken, setUnauthorized]);\n\n  return (\n    <div className=\"artist-container\">\n      {artist ? (\n        <img\n          className=\"artist-picture\"\n          src={artist.images[0].url}\n          alt={artist.name}\n        />\n      ) : (\n        <div className=\"artist-picture\">\n          <Skeleton width=\"64px\" height=\"64px\" />\n        </div>\n      )}\n      <div className=\"artist-details\">\n        <div className=\"artist-name\">{name || artist.name}</div>\n        <div className=\"artist-followers\">\n          {artist ? (\n            `${calculateFollowers(artist.followers.total)} followers`\n          ) : (\n            <Skeleton width=\"88px\" />\n          )}\n        </div>\n        {artist ? (\n          <a\n            className=\"artist-link spotify-link\"\n            href={artist.external_urls.spotify}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Open on Spotify\n          </a>\n        ) : (\n          <Skeleton width=\"113px\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst calculateFollowers = number => {\n  return number < 1000\n    ? number\n    : number < 1000000\n    ? Math.round(number / 1000) + 'K'\n    : Math.round(number / 1000000) + 'M';\n};\n\nexport default ArtistTooltip;\n","import React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport Skeleton from 'react-loading-skeleton';\nimport ArtistTooltip from '../../components/ArtistTooltip';\nimport './style.css';\n\nconst MAX_TITLE_LENGTH = 35;\n\nconst Track = ({ track, accessToken, setUnauthorized }) => {\n  if (!track) {\n    return (\n      <div className=\"track\">\n        <Skeleton width={Math.floor(Math.random() * 60 + 31) + '%'} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"track\">\n      <a\n        className=\"track-title spotify-link white\"\n        title={track.name}\n        href={track.external_urls.spotify}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {`${track.name.substring(0, MAX_TITLE_LENGTH)}${\n          track.name.length > MAX_TITLE_LENGTH ? '...' : ''\n        }`}\n      </a>\n      {` · `}\n      <span className=\"artist-list\">\n        {track.artists.map((artist, index) => (\n          <span key={artist.id}>\n            <Tooltip\n              placement=\"top\"\n              trigger={['click']}\n              overlay={\n                <ArtistTooltip\n                  name={artist.name}\n                  url={artist.href}\n                  accessToken={accessToken}\n                  setUnauthorized={setUnauthorized}\n                />\n              }\n            >\n              <span className=\"artist\">{artist.name}</span>\n            </Tooltip>\n            {index < track.artists.length - 1 ? ', ' : ''}\n          </span>\n        ))}\n      </span>\n    </div>\n  );\n};\n\nexport default Track;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoMdClose } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Pagination from '../../components/Pagination';\nimport { setActivePlaylist } from '../../store/actions';\nimport Track from '../../components/Track';\nimport './style.css';\n\nconst Tracks = ({ setUnauthorized, accessToken }) => {\n  const [tracks, setTracks] = useState([]);\n  const [totalTracks, setTotalTracks] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [limit, setLimit] = useState(10);\n  const [offset, setOffset] = useState(0);\n  const playlist = useSelector(state => state.activePlaylist);\n  const autoRefresh = useSelector(state => state.autoRefresh);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchPlaylistData = async () => {\n      setIsLoading(true);\n\n      if (playlist && accessToken) {\n        axios\n          .get(playlist.tracks.href, {\n            params: { offset, limit },\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          })\n          .then(res => {\n            setTracks(res.data.items);\n            setTotalTracks(res.data.total);\n          })\n          .catch(e => {\n            if (e.response.status === 401) {\n              setUnauthorized(true);\n            }\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      }\n    };\n\n    fetchPlaylistData();\n\n    if (autoRefresh) {\n      const interval = setInterval(() => {\n        fetchPlaylistData();\n      }, 30000);\n\n      return () => clearInterval(interval);\n    }\n  }, [playlist, setUnauthorized, accessToken, limit, offset, autoRefresh]);\n\n  useEffect(() => {\n    setOffset(0);\n  }, [playlist]);\n\n  const mockTracks = [];\n  if (isLoading) {\n    for (let i = 0; i < limit; i++) {\n      mockTracks.push(i);\n    }\n  }\n\n  if (!playlist) {\n    return <></>;\n  }\n\n  return (\n    <div className={`track-container`}>\n      <div className=\"playlist-info\">\n        <img\n          className=\"playlist-image\"\n          src={playlist.images[0].url}\n          alt={playlist.name}\n        />\n        <div className=\"playlist-details\">\n          <div className=\"list-link\">\n            <a\n              className=\"spotify-link\"\n              href={playlist.external_urls.spotify}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Open on Spotify\n            </a>\n          </div>\n          <div className=\"playlist-name\">{playlist.name}</div>\n          <div className=\"track-count\">\n            Created by{' '}\n            <a\n              className=\"playlist-owner spotify-link white\"\n              href={playlist.owner.external_urls.spotify}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {playlist.owner.display_name}\n            </a>{' '}\n            · {playlist.tracks.total} songs\n          </div>\n        </div>\n        <IoMdClose\n          className=\"close-button\"\n          onClick={() => dispatch(setActivePlaylist(null))}\n        />\n      </div>\n      <div className=\"track-list\">\n        {!isLoading\n          ? tracks\n              .filter(t => t.track && t.track.id)\n              .map(t => (\n                <Track\n                  key={t.track.id}\n                  track={t.track}\n                  accessToken={accessToken}\n                  setUnauthorized={setUnauthorized}\n                />\n              ))\n          : mockTracks.map(n => <Track key={n} />)}\n      </div>\n      <Pagination\n        offset={offset}\n        limit={limit}\n        total={totalTracks}\n        setOffset={setOffset}\n        setLimit={setLimit}\n      />\n    </div>\n  );\n};\n\nexport default Tracks;\n","import { createStore } from 'redux';\nimport { SET_FILTERS, SET_ACTIVE_PLAYLIST, SET_AUTO_REFRESH } from './actions';\n\nconst INITIAL_STATE = {\n  activePlaylist: null,\n  filters: {},\n  autoRefresh: true,\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_ACTIVE_PLAYLIST:\n      return { ...state, activePlaylist: action.playlist };\n    case SET_FILTERS:\n      return { ...state, filters: action.filters };\n    case SET_AUTO_REFRESH:\n      return { ...state, autoRefresh: action.value };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\nimport { SkeletonTheme } from 'react-loading-skeleton';\nimport './style.css';\nimport Playlists from '../Playlists';\nimport FilterPanel from '../FilterPanel';\nimport Tracks from '../Tracks';\nimport store from '../../store';\n\nconst {\n  REACT_APP_AUTH_API_URL,\n  REACT_APP_CLIENT_ID,\n  REACT_APP_URL,\n} = process.env;\n\nconst sendToAuth = () => {\n  // window.location = `${REACT_APP_AUTH_API_URL}?client_id=${REACT_APP_CLIENT_ID}&response_type=token&redirect_uri=${REACT_APP_URL}`;\n};\n\nconst App = () => {\n  const [showFilters, setShowFilters] = useState(false);\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    if (!localStorage.getItem('access_token')) {\n      const hash = window.location.hash.substr(1);\n      const hashParams = hash.split('&').reduce((result, item) => {\n        var parts = item.split('=');\n        result[parts[0]] = parts[1];\n        return result;\n      }, {});\n\n      if (hashParams.access_token) {\n        localStorage.setItem('access_token', hashParams.access_token);\n        setAccessToken(hashParams.access_token);\n      } else {\n        sendToAuth();\n      }\n    } else {\n      setAccessToken(localStorage.getItem('access_token'));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (unauthorized) {\n      localStorage.removeItem('access_token');\n      sendToAuth();\n    }\n  }, [unauthorized]);\n\n  return (\n    <Provider store={store}>\n      <SkeletonTheme color=\"#f2f2f2\" highlightColor=\"#777\">\n        <div className=\"App\">\n          <div id=\"header\">\n            <div className=\"app-title\">SpotiBrowser</div>\n            <button\n              className=\"show-filters\"\n              onClick={() => setShowFilters(!showFilters)}\n            >\n              Filters\n              <span className=\"arrow\">\n                {showFilters ? <TiArrowSortedUp /> : <TiArrowSortedDown />}\n              </span>\n            </button>\n          </div>\n          <FilterPanel visible={showFilters} />\n          <div id=\"contents\">\n            <Playlists\n              setUnauthorized={setUnauthorized}\n              accessToken={accessToken}\n            />\n            <Tracks\n              setUnauthorized={setUnauthorized}\n              accessToken={accessToken}\n            />\n          </div>\n        </div>\n      </SkeletonTheme>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}